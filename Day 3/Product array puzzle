Runtime Error:

//{ Driver Code Starts
// Initial template for C++

#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
// User function template for C++

class Solution {
  public:
    // nums: given vector
    // return the Product vector P that hold product except self at each index
    vector<long long int> productExceptSelf(vector<long long int>& nums) {
        int n = nums.size();
        int arr[n];
        int product = 1;
        for(int i=0;i<n;i++){
            product = product*nums[i];
        }
        for(int i=0;i<n;i++){
            if(nums[i] == 0){
                arr[i] = 0;
            }
            else
                arr[i]=product/nums[i];
        }
        for(int i=0;i<n;i++){
            cout << arr[i] << " ";
        }
        // code here
    }
};


//{ Driver Code Starts.
int main() {
    int t; // number of test cases
    cin >> t;
    while (t--) {
        int n; // size of the array
        cin >> n;
        vector<long long int> arr(n), vec(n);

        for (int i = 0; i < n; i++) // input the array
        {
            cin >> arr[i];
        }
        Solution obj;
        vec = obj.productExceptSelf(arr); // function call

        for (int i = 0; i < n; i++) // print the output
        {
            cout << vec[i] << " ";
        }
        cout << endl;
    }
    return 0;
}
// } Driver Code Ends





// User function template for C++

class Solution {
  public:
    // nums: given vector
    // return the Product vector P that hold product except self at each index
    vector<long long int> productExceptSelf(vector<long long int>& nums) {

        long long int n=nums.size();
        vector<long long int> ans(n,1);
    //prefix
    for(long long int i=1;i<n;i++){
        ans[i]=ans[i-1]*nums[i-1];
    }

    //suffix
    long long int suffix =1;
    for(long long int i=n-2;i>=0;i--){
        suffix*=nums[i+1];
        ans[i]*=suffix;
    }
    return ans;
    }
};
